apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: argocd-application
  labels:
    provider: kubernetes
    service: argocd
spec:
  compositeTypeRef:
    apiVersion: platform.example.com/v1alpha1
    kind: XArgoApplication
  
  resources:
  - name: argocd-application
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: argoproj.io/v1alpha1
            kind: Application
            metadata:
              namespace: argocd
              finalizers:
                - resources-finalizer.argocd.argoproj.io
            spec:
              project: default
              source:
                targetRevision: HEAD
              destination:
                server: https://kubernetes.default.svc
              syncPolicy:
                automated:
                  prune: true
                  selfHeal: true
                syncOptions:
                  - CreateNamespace=true
                  - PrunePropagationPolicy=foreground
                  - PruneLast=true
                retry:
                  limit: 3
                  backoff:
                    duration: 5s
                    factor: 2
                    maxDuration: 3m
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.appName
      toFieldPath: spec.forProvider.manifest.metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.repoURL
      toFieldPath: spec.forProvider.manifest.spec.source.repoURL
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.path
      toFieldPath: spec.forProvider.manifest.spec.source.path
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.targetRevision
      toFieldPath: spec.forProvider.manifest.spec.source.targetRevision
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.namespace
      toFieldPath: spec.forProvider.manifest.spec.destination.namespace
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.project
      toFieldPath: spec.forProvider.manifest.spec.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.syncPolicy.automated
      toFieldPath: spec.forProvider.manifest.spec.syncPolicy.automated.prune
      transforms:
      - type: convert
        convert:
          toType: bool
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.syncPolicy.prune
      toFieldPath: spec.forProvider.manifest.spec.syncPolicy.automated.prune
      transforms:
      - type: convert
        convert:
          toType: bool
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.syncPolicy.selfHeal
      toFieldPath: spec.forProvider.manifest.spec.syncPolicy.automated.selfHeal
      transforms:
      - type: convert
        convert:
          toType: bool
    # Add directory recursion for application paths
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.path
      toFieldPath: spec.forProvider.manifest.spec.source.directory.recurse
      transforms:
      - type: convert
        convert:
          toType: bool
      - type: map
        map:
          applications: true
          infrastructure: true
apiVersion: helm.crossplane.io/v1beta1
kind: Release
metadata:
  name: n8n
  namespace: default
spec:
  rollbackLimit: 3
  forProvider:
    namespace: n8n
    chart:
      name: n8n
      repository: https://8gears.container-registry.com/chartrepo/library
      version: "0.19.0"
    values:
      image:
        repository: n8nio/n8n
        tag: "1.17.1"
      
      persistence:
        enabled: true
        storageClass: "nfs-csi"
        size: 10Gi
      
      postgresql:
        enabled: true
        persistence:
          enabled: true
          storageClass: "nfs-csi"
          size: 20Gi
        auth:
          postgresPassword: "n8n-postgres-password"  # Change in production
          database: "n8n"
      
      ingress:
        enabled: true
        className: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
        hosts:
          - host: n8n.your-domain.com  # Replace with your domain
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: n8n-tls
            hosts:
              - n8n.your-domain.com
      
      env:
        N8N_HOST: "n8n.your-domain.com"
        N8N_PORT: "5678"
        N8N_PROTOCOL: "https"
        WEBHOOK_URL: "https://n8n.your-domain.com"
        GENERIC_TIMEZONE: "UTC"
        DB_TYPE: "postgresdb"
        DB_POSTGRESDB_HOST: "n8n-postgresql"
        DB_POSTGRESDB_PORT: "5432"
        DB_POSTGRESDB_DATABASE: "n8n"
        DB_POSTGRESDB_USER: "postgres"
      
      envFrom:
        - secretRef:
            name: n8n-secrets
      
      resources:
        limits:
          cpu: 1000m
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: n8n-secrets
  namespace: n8n
type: Opaque
stringData:
  DB_POSTGRESDB_PASSWORD: "n8n-postgres-password"  # Change in production
  N8N_ENCRYPTION_KEY: "your-encryption-key-here"   # Generate a secure key
